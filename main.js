(()=>{"use strict";var t={};function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},e(t)}function n(t,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,n){if("object"!==e(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===e(i)?i:String(i)),o)}var i}t.p="";var r=function(){function t(e,n,r,o,i){var u=i.handleDeleteCard,c=i.addLike,a=i.deleteLike;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=e.name,this._link=e.link,this._templateSelector=n,this._image,this._handleCardClick=r,this._handleDeleteCard=u,this._userId=o,this._ownerId=e.owner._id,this._cardId=e._id,this._likes=e.likes,this._addLike=c,this._deleteLike=a}var e,r;return e=t,(r=[{key:"like",value:function(){this._likeButton.classList.add("element__button-like_active")}},{key:"dislike",value:function(){this._likeButton.classList.remove("element__button-like_active")}},{key:"_userLike",value:function(){var t=this;this._likes.forEach((function(e){e._id===t._userId?t._addLike():t._deleteLike()}))}},{key:"likesCount",value:function(t){this._likesCount.textContent=t.likes.length}},{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".element").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._image=this._element.querySelector(".element__image"),this._image.src=this._link,this._element.querySelector(".element__title").textContent=this._name,this._image.alt=this._name,this._deleteButtonTrash=this._element.querySelector(".element__button-trash"),this._userId!==this._ownerId&&this._deleteButtonTrash.classList.add("element__button-trash_inactive"),this._likeButton=this._element.querySelector(".element__button-like"),this._likesCount=this._element.querySelector(".element__like-length"),this._likesCount.textContent=this._likes.length,this._userLike(),this._setEventListeners(),this._element}},{key:"_setEventListeners",value:function(){var t=this;this._likeButton.addEventListener("click",(function(){t._likeButton.classList.contains("element__button-like_active")?t._deleteLike():t._addLike()})),this._deleteButtonTrash.addEventListener("click",(function(){t._handleDeleteCard(t._cardId,t._element)})),this._image.addEventListener("click",(function(){t._handleCardClick(t._name,t._link)}))}},{key:"_handleClickLike",value:function(){this._element.querySelector(".element__button-like").classList.toggle("element__button-like_active")}}])&&n(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}(),o=document.querySelector(".profile__edit-button"),i=(document.querySelector("#popup-profile"),document.querySelector("#popup-add-photo")),u=document.querySelector(".profile__avatar-wrapper"),c=document.querySelector(".popup__container"),a=document.querySelector(".profile__add-button"),l=document.querySelector("#popup__container-add-photo"),s=i.querySelector(".popup__input_type_title"),f=i.querySelector(".popup__input_type_link"),p=document.querySelector("#popup-images"),y=p.querySelector(".popup__image"),m=p.querySelector(".popup__heading"),d=document.querySelector("#popup__container-avatar");function h(t){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},h(t)}function b(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==h(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==h(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===h(o)?o:String(o)),r)}var o}var v=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._form=n,this._formElement=document.querySelector(this._form),this._formSelector=e.formSelector,this._input=e.inputSelector,this._submit=e.submitButtonSelector,this._inactiveButton=e.inactiveButtonClass,this._inputError=e.inputErrorClass,this._error=e.errorClass,this._buttonElement=document.querySelector(this._form).querySelector(this._submit),this._inputList=Array.from(document.querySelector(this._form).querySelectorAll(this._input))}var e,n;return e=t,(n=[{key:"_showInputError",value:function(t,e){var n=this._formElement.querySelector(".".concat(t.id,"-error"));t.classList.add(this._inputError),n.textContent=e,n.classList.add(this._error)}},{key:"_hideInputError",value:function(t){t.classList.remove(this._inputError);var e=this._formElement.querySelector(".".concat(t.id,"-error"));e.classList.remove(this._error),e.classList.remove(this._error),e.textContent=""}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(t){return!t.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput(this._inputList)?(this._buttonElement.setAttribute("disabled",!0),this._buttonElement.classList.add(this._inactiveButton)):(this._buttonElement.removeAttribute("disabled"),this._buttonElement.classList.remove(this._inactiveButton))}},{key:"_checkInputValidity",value:function(t){t.validity.valid?this._hideInputError(t):this._showInputError(t,t.validationMessage)}},{key:"disableSubmitButton",value:function(){var t=this;this._inputList.forEach((function(e){t._hideInputError(e)})),this._toggleButtonState()}},{key:"_setEventListener",value:function(){var t=this;this._toggleButtonState(),this._inputList.forEach((function(e){e.addEventListener("input",(function(){t._checkInputValidity(e),t._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(t){t.preventDefault()})),this._setEventListener()}}])&&b(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function _(t){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},_(t)}function g(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==_(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==_(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===_(o)?o:String(o)),r)}var o}var S=function(){function t(e,n){var r=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._container=document.querySelector(n),this._renderer=r}var e,n;return e=t,(n=[{key:"addItem",value:function(t){this._container.prepend(t)}},{key:"renderItems",value:function(t){var e=this;t.forEach((function(t){e._renderer(t)}))}}])&&g(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function k(t){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},k(t)}function w(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==k(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==k(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===k(o)?o:String(o)),r)}var o}var E=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popupElement=document.querySelector(e)}var e,n;return e=t,(n=[{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}},{key:"open",value:function(){this._handleEscClose=this._handleEscClose.bind(this),this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var t=this;this._popupElement.addEventListener("mousedown",(function(e){(e.target.classList.contains("popup__button-exit")||e.target.classList.contains("popup"))&&t.close()}))}}])&&w(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function j(t){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},j(t)}function P(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==j(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==j(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===j(o)?o:String(o)),r)}var o}function L(){return L="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=C(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},L.apply(this,arguments)}function O(t,e){return O=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},O(t,e)}function C(t){return C=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},C(t)}var I=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&O(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=C(r);if(o){var n=C(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===j(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e){var n,r=e.cardImage,o=e.cardHeading;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,t))._cardImage=r,n._cardHeading=o,n}return e=u,(n=[{key:"open",value:function(t,e){L(C(u.prototype),"open",this).call(this),this._cardImage.src=e,this._cardImage.alt=t,this._cardHeading.textContent=t}}])&&P(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(E);function q(t){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},q(t)}function T(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==q(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==q(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===q(o)?o:String(o)),r)}var o}var B=function(){function t(e){var n=e.profileName,r=e.profileProfession,o=e.profileAvatar;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=document.querySelector(n),this._profession=document.querySelector(r),this._avatar=document.querySelector(o)}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._profession.textContent,avatar:this._avatar.src}}},{key:"setUserInfo",value:function(t){this._name.textContent=t.name,this._profession.textContent=t.about,this._avatar.src=t.avatar}}])&&T(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function R(t){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},R(t)}function U(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==R(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==R(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===R(o)?o:String(o)),r)}var o}function x(){return x="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=V(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},x.apply(this,arguments)}function D(t,e){return D=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},D(t,e)}function V(t){return V=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},V(t)}var A=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&D(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=V(r);if(o){var n=V(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===R(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e){var n,r=e.handleFormSubmit;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,t))._handleFormSubmit=r,n._formElement=n._popupElement.querySelector(".popup__form"),n._inputList=Array.from(n._formElement.querySelectorAll(".popup__input")),n._formButton=n._formElement.querySelector(".popup__button-save"),n}return e=u,(n=[{key:"_getInputValues",value:function(){var t=this;return this._formValues={},this._inputList.forEach((function(e){t._formValues[e.name]=e.value})),this._formValues}},{key:"setInputValues",value:function(t){this._inputList.forEach((function(e){var n;e.value=null!==(n=t[e.name])&&void 0!==n?n:""}))}},{key:"renderLoading",value:function(t){t?this._formButton.textContent="Сохранение...":this._formElement.classList.contains("popup__form-add-photo")?this._formButton.textContent="Создать":this._formButton.textContent="Сохранить"}},{key:"setEventListeners",value:function(){this._formElement.addEventListener("submit",(function(t){t.preventDefault()})),this.renderLoading(!0),this._handleFormSubmit(this._getInputValues())}},{key:"close",value:function(){x(V(u.prototype),"close",this).call(this),this._formElement.reset()}}])&&U(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(E);function F(t){return F="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},F(t)}function H(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==F(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==F(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===F(o)?o:String(o)),r)}var o}var N=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=e,this._headers=n}var e,n;return e=t,(n=[{key:"getCards",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then((function(t){return t.ok?t.json():Promise.reject("Ошибка ".concat(t.status))})).catch((function(t){return console.log("Ошибка ".concat(t))}))}},{key:"addCard",value:function(t){return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t.title,link:t.link})}).then((function(t){return t.ok?t.json():Promise.reject("Ошибка ".concat(t.status))})).catch((function(t){return console.log("Ошибка ".concat(t))}))}},{key:"getUserInfo",value:function(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then((function(t){return t.ok?t.json():Promise.reject("Ошибка ".concat(t.status))})).catch((function(t){console.log("Ошибка ".concat(t))}))}},{key:"editUserInfo",value:function(t){return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t.name,about:t.about})}).then((function(t){return t.ok?t.json():Promise.reject("Ошибка ".concat(t.status))})).catch((function(t){return console.log("Ошибка ".concat(t))}))}},{key:"deleteCard",value:function(t){return fetch("".concat(this._baseUrl,"/cards/").concat(t),{method:"DELETE",headers:this._headers}).then((function(t){return t.ok?t.json():Promise.reject("Ошибка ".concat(t.status))})).catch((function(t){return console.log("Ошибка ".concat(t))}))}},{key:"addLike",value:function(t){return fetch("".concat(this._baseUrl,"/cards/").concat(t,"/likes"),{method:"PUT",headers:this._headers}).then((function(t){return t.ok?t.json():Promise.reject("Ошибка ".concat(t.status))})).catch((function(t){console.log("Ошибка ".concat(t))}))}},{key:"deleteLike",value:function(t){return fetch("".concat(this._baseUrl,"/cards/").concat(t,"/likes"),{method:"DELETE",headers:this._headers}).then((function(t){return t.ok?t.json():Promise.reject("Ошибка ".concat(t.status))})).catch((function(t){console.log("Ошибка ".concat(t))}))}},{key:"editAvatar",value:function(t){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t.avatar})}).then((function(t){return t.ok?t.json():Promise.reject("Ошибка ".concat(t.status))})).catch((function(t){console.log("Ошибка ".concat(t))}))}},{key:"getInitialInfo",value:function(){return Promise.all([this.getUserInfo(),this.getCards()])}}])&&H(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function J(t){return J="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},J(t)}function z(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,W(r.key),r)}}function M(){return M="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=Q(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},M.apply(this,arguments)}function G(t,e){return G=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},G(t,e)}function K(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function Q(t){return Q=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},Q(t)}function W(t){var e=function(t,e){if("object"!==J(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==J(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===J(e)?e:String(e)}var X=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&G(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=Q(r);if(o){var n=Q(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===J(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return K(t)}(this,t)});function u(t,e){var n,r,o,c,a=e.handleSubmit;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),r=K(n=i.call(this,t)),c=function(t){t.preventDefault(),n._handleSubmit(n._cardId,n._cardEl)},(o=W(o="_handleSubmitForm"))in r?Object.defineProperty(r,o,{value:c,enumerable:!0,configurable:!0,writable:!0}):r[o]=c,n._handleSubmit=a,n._popupForm=n._popupElement.querySelector(".popup__form"),n}return e=u,(n=[{key:"setEventListeners",value:function(){M(Q(u.prototype),"setEventListeners",this).call(this),this._popupForm.addEventListener("submit",this._handleSubmitForm)}},{key:"open",value:function(t,e){M(Q(u.prototype),"open",this).call(this),this._cardId=t,this._cardEl=e}},{key:"close",value:function(){M(Q(u.prototype),"close",this).call(this),this._popupForm.reset()}}])&&z(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(E);const Y=t.p+"c15cb08ab8ecfaba54c6.jpg",Z=t.p+"bed8c136e13907f5eefb.png",$=t.p+"bed8c136e13907f5eefb.svg",tt=t.p+"a1892ea72cb87c8fc3aa.svg",et=t.p+"35948469632d0421d697.svg",nt=t.p+"1ad06e85f169668a1f36.svg",rt=t.p+"823b0cf1b0b7e9cb7cad.svg",ot=t.p+"bbe2a6eafac19c3d031c.svg",it=t.p+"a086f758840ae814ecde.svg";var ut;function ct(t){return ct="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},ct(t)}function at(t,e,n){return(e=function(t){var e=function(t,e){if("object"!==ct(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==ct(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===ct(e)?e:String(e)}(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}at(ut={name:"Jack",image:Y},"name","КнопкаДобавить"),at(ut,"image",Z),at(ut,"name","ДобавитьSvg"),at(ut,"image",$),at(ut,"name","ЗакрытьSvg"),at(ut,"image",tt),at(ut,"name","ЛайкАктивный"),at(ut,"image",et),at(ut,"name","Лайк"),at(ut,"image",nt),at(ut,"name","Удалить"),at(ut,"image",rt),at(ut,"name","Вектор"),at(ut,"image",ot),at(ut,"name","Карандаш"),at(ut,"image",it);var lt,st={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button-save",inactiveButtonClass:"popup__button-save_inactive",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_active"},ft=new N("https://nomoreparties.co/v1/cohort-65",{authorization:"b15bc02e-ae06-46a3-b490-b1ce7ba85320","content-type":"application/json; charset=UTF-8"}),pt=new B({profileName:".profile__name",profileProfession:".profile__profession",profileAvatar:".profile__avatar"}),yt=new A("#popup-profile",{handleFormSubmit:function(t){ft.editUserInfo(t).then((function(t){pt.setUserInfo(t)})).catch((function(t){return console.log("Ошибка ".concat(t))})).finally((function(){yt.renderLoading(!1)}))}}),mt=new A("#popup-add-photo",{handleFormSubmit:function(t){ft.addCard(t).then((function(t){gt(t,".template-add-cards",vt,lt)})).catch((function(t){return console.log("Ошибка ".concat(t))})).finally((function(){mt.renderLoading(!1)}))}}),dt=new A("#popup-avatar",{handleFormSubmit:function(t){ft.editAvatar(t).then((function(t){pt.setUserInfo(t)})).catch((function(t){return console.log("Ошибка ".concat(t))})).finally((function(){dt.renderLoading(!1)}))}});ft.getInitialInfo().then((function(t){var e=t[0],n=t[1];lt=e._id,pt.setUserInfo(e),_t.renderItems(n)})).catch((function(t){console.log("Ошибка ".concat(t))}));var ht=new X("#popup-confirm",{handleSubmit:function(t,e){ft.deleteCard(t).then((function(){e.remove(),ht.close()})).catch((function(t){console.log("Ошибка ".concat(t))}))}});ht.setEventListeners();var bt=new I("#popup-images",{cardImage:y,cardHeading:m});bt.setEventListeners();var vt=function(t,e){bt.open(t,e)},_t=new S({renderer:function(t){gt(t,".template-add-cards",vt,lt)}},".elements");function gt(t,e,n,o){var i=new r(t,e,n,o,{handleDeleteCard:function(t,e){ht.open(t,e)},addLike:function(){ft.addLike(t._id).then((function(t){i.like(),i.likesCount(t)})).catch((function(t){return console.log("Ошибка ".concat(t))}))},deleteLike:function(){ft.deleteLike(t._id).then((function(t){i.dislike(),i.likesCount(t)})).catch((function(t){return console.log("Ошибка ".concat(t))}))}}),u=i.generateCard();_t.addItem(u)}function St(t){var e=new E(t);e.open(),e.setEventListeners()}o.addEventListener("click",(function(){yt.setInputValues(pt.getUserInfo()),kt.disableSubmitButton(),St("#popup-profile")})),a.addEventListener("click",(function(){s.value="",f.value="",wt.disableSubmitButton(),St("#popup-add-photo")})),c.addEventListener("submit",(function(){yt.setEventListeners(),yt.close()})),l.addEventListener("submit",(function(){mt.setEventListeners(),mt.close()})),u.addEventListener("click",(function(){St("#popup-avatar"),Et.disableSubmitButton()})),d.addEventListener("submit",(function(){dt.setEventListeners(),dt.close()}));var kt=new v(st,"#popup__form-profile");kt.enableValidation();var wt=new v(st,"#popup__form-add-photo");wt.enableValidation();var Et=new v(st,"#popup-avatar-form");Et.enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SWtLLEdBQW9CUyxvQkFDcEJULEdBQW9CL0YsT0FDeEIsSUEwREEsSUFBTW9ILEdBQXFCLElBQUl4SyxFQUFjdUksR0FBa0Isd0JBQy9EaUMsR0FBbUJJLG1CQUNuQixJQUFNRixHQUF5QixJQUFJMUssRUFBY3VJLEdBQWtCLDBCQUNuRW1DLEdBQXVCRSxtQkFDdkIsSUFBTUQsR0FBdUIsSUFBSTNLLEVBQWN1SSxHQUFrQixzQkFDakVvQyxHQUFxQkMsa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXN0by93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9tZXN0by93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL9ChYXJkLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3V0aWxzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0FwaS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwQ29uZmlybS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9wYWdlcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGUgcmVxdWlyZSBzY29wZVxudmFyIF9fd2VicGFja19yZXF1aXJlX18gPSB7fTtcblxuIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjsiLCJleHBvcnQgY2xhc3MgQ2FyZCB7XHJcbiAgICBjb25zdHJ1Y3RvciAoZGF0YSwgdGVtcGxhdGVTZWxlY3RvciwgaGFuZGxlQ2FyZENsaWNrLCBjYXJkSWQsIHtoYW5kbGVEZWxldGVDYXJkLCBhZGRMaWtlLCBkZWxldGVMaWtlfSApIHtcclxuICAgICAgICB0aGlzLl9uYW1lID0gZGF0YS5uYW1lO1xyXG4gICAgICAgIHRoaXMuX2xpbmsgPSBkYXRhLmxpbms7XHJcbiAgICAgICAgdGhpcy5fdGVtcGxhdGVTZWxlY3RvciA9IHRlbXBsYXRlU2VsZWN0b3I7XHJcbiAgICAgICAgdGhpcy5faW1hZ2U7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrID0gaGFuZGxlQ2FyZENsaWNrO1xyXG4gICAgICAgIHRoaXMuX2hhbmRsZURlbGV0ZUNhcmQgPSBoYW5kbGVEZWxldGVDYXJkO1xyXG4gICAgICAgIHRoaXMuX3VzZXJJZCA9IGNhcmRJZDtcclxuICAgICAgICB0aGlzLl9vd25lcklkID0gZGF0YS5vd25lci5faWQ7XHJcbiAgICAgICAgdGhpcy5fY2FyZElkID0gZGF0YS5faWQ7XHJcbiAgICAgICAgdGhpcy5fbGlrZXMgPSBkYXRhLmxpa2VzO1xyXG4gICAgICAgIHRoaXMuX2FkZExpa2UgPSBhZGRMaWtlO1xyXG4gICAgICAgIHRoaXMuX2RlbGV0ZUxpa2UgPSBkZWxldGVMaWtlO1xyXG4gICAgfVxyXG5cclxuICAgIGxpa2UoKSB7XHJcbiAgICAgICAgdGhpcy5fbGlrZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdlbGVtZW50X19idXR0b24tbGlrZV9hY3RpdmUnKTtcclxuICAgIH1cclxuXHJcbiAgICBkaXNsaWtlICgpIHtcclxuICAgICAgICB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoJ2VsZW1lbnRfX2J1dHRvbi1saWtlX2FjdGl2ZScpO1xyXG4gICAgfVxyXG5cclxuICAgIF91c2VyTGlrZSAoKSB7XHJcbiAgICAgICAgdGhpcy5fbGlrZXMuZm9yRWFjaChlbGVtZW50ID0+IHtcclxuICAgICAgICAgICAgaWYgKGVsZW1lbnQuX2lkID09PSB0aGlzLl91c2VySWQpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2FkZExpa2UoKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2RlbGV0ZUxpa2UoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgbGlrZXNDb3VudCAocmVzKSB7XHJcbiAgICAgICAgdGhpcy5fbGlrZXNDb3VudC50ZXh0Q29udGVudCA9IHJlcy5saWtlcy5sZW5ndGg7XHJcbiAgICB9XHJcblxyXG4gICAgLy/QpNGD0L3QutGG0LjRjywg0LLQvtC30LLRgNCw0YnQsNGO0YnQsNGPINGA0LDQt9C80LXRgtC60YNcclxuICAgIF9nZXRUZW1wbGF0ZSgpIHtcclxuICAgICAgICByZXR1cm4gZG9jdW1lbnRcclxuICAgICAgICAucXVlcnlTZWxlY3Rvcih0aGlzLl90ZW1wbGF0ZVNlbGVjdG9yKVxyXG4gICAgICAgIC5jb250ZW50XHJcbiAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50JylcclxuICAgICAgICAuY2xvbmVOb2RlKHRydWUpO1xyXG4gICAgfVxyXG5cclxuICAgIC8v0KTRg9C90LrRhtC40Y8sINCz0LXQvdC10YDQuNGA0YPRjtGJ0LDRjyDQutCw0YDRgtC+0YfQutGDXHJcbiAgICBnZW5lcmF0ZUNhcmQgKCkge1xyXG4gICAgICAgIHRoaXMuX2VsZW1lbnQgPSB0aGlzLl9nZXRUZW1wbGF0ZSgpO1xyXG4gICAgICAgIHRoaXMuX2ltYWdlID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9faW1hZ2UnKTtcclxuICAgICAgICB0aGlzLl9pbWFnZS5zcmMgPSB0aGlzLl9saW5rO1xyXG4gICAgICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX3RpdGxlJykudGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lO1xyXG4gICAgICAgIHRoaXMuX2ltYWdlLmFsdCA9IHRoaXMuX25hbWU7XHJcblxyXG4gICAgICAgIHRoaXMuX2RlbGV0ZUJ1dHRvblRyYXNoID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fYnV0dG9uLXRyYXNoJyk7XHJcbiAgICAgICAgaWYodGhpcy5fdXNlcklkICE9PSB0aGlzLl9vd25lcklkKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2RlbGV0ZUJ1dHRvblRyYXNoLmNsYXNzTGlzdC5hZGQoJ2VsZW1lbnRfX2J1dHRvbi10cmFzaF9pbmFjdGl2ZScpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5fbGlrZUJ1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2J1dHRvbi1saWtlJyk7XHJcbiAgICAgICAgdGhpcy5fbGlrZXNDb3VudCA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2xpa2UtbGVuZ3RoJyk7XHJcbiAgICAgICAgdGhpcy5fbGlrZXNDb3VudC50ZXh0Q29udGVudCA9IHRoaXMuX2xpa2VzLmxlbmd0aDtcclxuXHJcbiAgICAgICAgdGhpcy5fdXNlckxpa2UoKTtcclxuICAgICAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuICAgICAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcclxuICAgIH1cclxuXHJcbiAgICBfc2V0RXZlbnRMaXN0ZW5lcnMgKCkge1xyXG4gICAgICAgIHRoaXMuX2xpa2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgICAgaWYodGhpcy5fbGlrZUJ1dHRvbi5jbGFzc0xpc3QuY29udGFpbnMoJ2VsZW1lbnRfX2J1dHRvbi1saWtlX2FjdGl2ZScpKXtcclxuICAgICAgICAgICAgdGhpcy5fZGVsZXRlTGlrZSgpO1xyXG4gICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2FkZExpa2UoKTtcclxuICAgICAgICAgICB9XHJcbiAgICAgICAgICB9KTtcclxuIFxyXG4gICAgICAgICAgdGhpcy5fZGVsZXRlQnV0dG9uVHJhc2guYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuX2hhbmRsZURlbGV0ZUNhcmQodGhpcy5fY2FyZElkLCB0aGlzLl9lbGVtZW50KTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIFxyXG4gICAgICAgIHRoaXMuX2ltYWdlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sodGhpcy5fbmFtZSwgdGhpcy5fbGluayk7XHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICBfaGFuZGxlQ2xpY2tMaWtlICgpIHtcclxuICAgICAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19idXR0b24tbGlrZScpLmNsYXNzTGlzdC50b2dnbGUoJ2VsZW1lbnRfX2J1dHRvbi1saWtlX2FjdGl2ZScpOyBcclxuICAgIH1cclxuXHJcbn1cclxuXHJcblxyXG5cclxuIiwiZXhwb3J0IGNvbnN0IGluaXRpYWxDYXJkcyA9IFtcclxuICB7XHJcbiAgICBuYW1lOiAn0JDRgNGF0YvQtycsXHJcbiAgICBsaW5rOiAnaHR0cHM6Ly9waWN0dXJlcy5zMy55YW5kZXgubmV0L2Zyb250ZW5kLWRldmVsb3Blci9jYXJkcy1jb21wcmVzc2VkL2Fya2h5ei5qcGcnXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiAn0KfQtdC70Y/QsdC40L3RgdC60LDRjyDQvtCx0LvQsNGB0YLRjCcsXHJcbiAgICBsaW5rOiAnaHR0cHM6Ly9waWN0dXJlcy5zMy55YW5kZXgubmV0L2Zyb250ZW5kLWRldmVsb3Blci9jYXJkcy1jb21wcmVzc2VkL2NoZWx5YWJpbnNrLW9ibGFzdC5qcGcnXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiAn0JjQstCw0L3QvtCy0L4nLFxyXG4gICAgbGluazogJ2h0dHBzOi8vcGljdHVyZXMuczMueWFuZGV4Lm5ldC9mcm9udGVuZC1kZXZlbG9wZXIvY2FyZHMtY29tcHJlc3NlZC9pdmFub3ZvLmpwZydcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6ICfQmtCw0LzRh9Cw0YLQutCwJyxcclxuICAgIGxpbms6ICdodHRwczovL3BpY3R1cmVzLnMzLnlhbmRleC5uZXQvZnJvbnRlbmQtZGV2ZWxvcGVyL2NhcmRzLWNvbXByZXNzZWQva2FtY2hhdGthLmpwZydcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6ICfQpdC+0LvQvNC+0LPQvtGA0YHQutC40Lkg0YDQsNC50L7QvScsXHJcbiAgICBsaW5rOiAnaHR0cHM6Ly9waWN0dXJlcy5zMy55YW5kZXgubmV0L2Zyb250ZW5kLWRldmVsb3Blci9jYXJkcy1jb21wcmVzc2VkL2tob2xtb2dvcnNreS1yYXlvbi5qcGcnXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiAn0JHQsNC50LrQsNC7JyxcclxuICAgIGxpbms6ICdodHRwczovL3BpY3R1cmVzLnMzLnlhbmRleC5uZXQvZnJvbnRlbmQtZGV2ZWxvcGVyL2NhcmRzLWNvbXByZXNzZWQvYmFpa2FsLmpwZydcclxuICB9XHJcbl07IFxyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBlZGl0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2VkaXQtYnV0dG9uJyk7XHJcbmV4cG9ydCBjb25zdCBwb3B1cEVkaXRQcm9maWxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3BvcHVwLXByb2ZpbGUnKTtcclxuZXhwb3J0IGNvbnN0IHBob3RvUG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcG9wdXAtYWRkLXBob3RvJyk7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlRWRpdEF2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19hdmF0YXItd3JhcHBlcicpO1xyXG5leHBvcnQgY29uc3QgcG9wdXBDb250YWluZXJXaXRoRm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fY29udGFpbmVyJyk7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlTmFtZSA9ICcucHJvZmlsZV9fbmFtZSc7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlUHJvZmVzc2lvbiA9ICcucHJvZmlsZV9fcHJvZmVzc2lvbic7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlQXZhdGFyID0gJy5wcm9maWxlX19hdmF0YXInO1xyXG5leHBvcnQgY29uc3QgcGhvdG9CdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYWRkLWJ1dHRvbicpO1xyXG5leHBvcnQgY29uc3QgcGhvdG9Qb3B1cENvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNwb3B1cF9fY29udGFpbmVyLWFkZC1waG90bycpO1xyXG5leHBvcnQgY29uc3QgaW5wdXRQaWN0aXJlVGl0bGUgPSBwaG90b1BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW5wdXRfdHlwZV90aXRsZScpO1xyXG5leHBvcnQgY29uc3QgaW5wdXRMaW5rID0gcGhvdG9Qb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2lucHV0X3R5cGVfbGluaycpO1xyXG5leHBvcnQgY29uc3QgZWxlbWVudHMgPSAnLmVsZW1lbnRzJztcclxuZXhwb3J0IGNvbnN0IHBvcHVwSW1hZ2VzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3BvcHVwLWltYWdlcycpO1xyXG5leHBvcnQgY29uc3QgcG9wdXBDYXJkSW1hZ2VGdWxsID0gcG9wdXBJbWFnZXMucXVlcnlTZWxlY3RvcignLnBvcHVwX19pbWFnZScpO1xyXG5leHBvcnQgY29uc3QgcG9wdXBJbWFnZUhlYWRpbmcgPSBwb3B1cEltYWdlcy5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2hlYWRpbmcnKTtcclxuZXhwb3J0IGNvbnN0IHBvcHVwQXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3BvcHVwX19jb250YWluZXItYXZhdGFyJyk7XHJcbiIsImV4cG9ydCBjbGFzcyBGb3JtVmFsaWRhdG9yIHtcclxuICAgIGNvbnN0cnVjdG9yIChjb25maWcsIGZvcm0pIHtcclxuICAgICAgICB0aGlzLl9mb3JtID0gZm9ybTtcclxuICAgICAgICB0aGlzLl9mb3JtRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fZm9ybSk7XHJcbiAgICAgICAgdGhpcy5fZm9ybVNlbGVjdG9yID0gY29uZmlnLmZvcm1TZWxlY3RvcjtcclxuICAgICAgICB0aGlzLl9pbnB1dCA9IGNvbmZpZy5pbnB1dFNlbGVjdG9yO1xyXG4gICAgICAgIHRoaXMuX3N1Ym1pdCA9IGNvbmZpZy5zdWJtaXRCdXR0b25TZWxlY3RvcjtcclxuICAgICAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbiA9IGNvbmZpZy5pbmFjdGl2ZUJ1dHRvbkNsYXNzO1xyXG4gICAgICAgIHRoaXMuX2lucHV0RXJyb3IgPSBjb25maWcuaW5wdXRFcnJvckNsYXNzO1xyXG4gICAgICAgIHRoaXMuX2Vycm9yID0gY29uZmlnLmVycm9yQ2xhc3M7XHJcbiAgICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fZm9ybSkucXVlcnlTZWxlY3Rvcih0aGlzLl9zdWJtaXQpO1xyXG4gICAgICAgIHRoaXMuX2lucHV0TGlzdCA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9mb3JtKS5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2lucHV0KSk7XHJcbiAgICB9XHJcblxyXG4gICAgX3Nob3dJbnB1dEVycm9yIChpbnB1dEVsZW1lbnQsIGVycm9yTWVzc2FnZSkge1xyXG4gICAgICAgIGNvbnN0IGlucHV0Rm9ybUVycm9yID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgLiR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xyXG4gICAgICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3IpO1xyXG4gICAgICAgIGlucHV0Rm9ybUVycm9yLnRleHRDb250ZW50ID0gZXJyb3JNZXNzYWdlO1xyXG4gICAgICAgIGlucHV0Rm9ybUVycm9yLmNsYXNzTGlzdC5hZGQodGhpcy5fZXJyb3IpO1xyXG4gICAgfVxyXG5cclxuICAgIF9oaWRlSW5wdXRFcnJvciAoaW5wdXRFbGVtZW50KSB7XHJcbiAgICAgICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5wdXRFcnJvcik7XHJcbiAgICAgICAgY29uc3QgaW5wdXRGb3JtRXJyb3IgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XHJcbiAgICAgICAgaW5wdXRGb3JtRXJyb3IuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9lcnJvcik7XHJcbiAgICAgICAgaW5wdXRGb3JtRXJyb3IuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9lcnJvcik7XHJcbiAgICAgICAgaW5wdXRGb3JtRXJyb3IudGV4dENvbnRlbnQgPSAnJztcclxuICAgIH1cclxuXHJcbiAgICBfaGFzSW52YWxpZElucHV0ICgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5faW5wdXRMaXN0LnNvbWUoKGlucHV0RWxlbWVudCkgPT4ge1xyXG4gICAgICAgICAgICByZXR1cm4gIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZDtcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBfdG9nZ2xlQnV0dG9uU3RhdGUgKCkge1xyXG4gICAgICAgIGlmKHRoaXMuX2hhc0ludmFsaWRJbnB1dCAodGhpcy5faW5wdXRMaXN0KSkge1xyXG4gICAgICAgICAgICB0aGlzLl9idXR0b25FbGVtZW50LnNldEF0dHJpYnV0ZSgnZGlzYWJsZWQnLCB0cnVlKTtcclxuICAgICAgICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2luYWN0aXZlQnV0dG9uKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLl9idXR0b25FbGVtZW50LnJlbW92ZUF0dHJpYnV0ZSgnZGlzYWJsZWQnKTtcclxuICAgICAgICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2luYWN0aXZlQnV0dG9uKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgX2NoZWNrSW5wdXRWYWxpZGl0eSAoaW5wdXRFbGVtZW50KSB7XHJcbiAgICAgICAgaWYgKCFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcclxuICAgICAgICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50LCBpbnB1dEVsZW1lbnQudmFsaWRhdGlvbk1lc3NhZ2UpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGRpc2FibGVTdWJtaXRCdXR0b24gKCkge1xyXG4gICAgICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgX3NldEV2ZW50TGlzdGVuZXIgKCkge1xyXG5cclxuICAgICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgICAgICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5IChpbnB1dEVsZW1lbnQpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG5cclxuICAgIGVuYWJsZVZhbGlkYXRpb24gKCkgeyBcclxuICAgICAgICB0aGlzLl9mb3JtRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCAoZXZlbnQpID0+IHtcclxuICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXIoKTtcclxuICAgIH1cclxufVxyXG4iLCJleHBvcnQgY2xhc3MgU2VjdGlvbiB7XHJcbiAgICBjb25zdHJ1Y3Rvcih7IHJlbmRlcmVyfSwgY29udGFpbmVyU2VsZWN0b3IpIHtcclxuICAgICAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lclNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gICAgfVxyXG5cclxuICAgIGFkZEl0ZW0gKGVsZW1lbnQpIHtcclxuICAgICAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbGVtZW50KTtcclxuICAgIH1cclxuXHJcbiAgICByZW5kZXJJdGVtcyAoY2FyZHMpIHtcclxuICAgICAgICBjYXJkcy5mb3JFYWNoKChpdGVtKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuX3JlbmRlcmVyKGl0ZW0pO1xyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbn0iLCJcclxuZXhwb3J0IGNsYXNzIFBvcHVwIHtcclxuICAgIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgICAgICB0aGlzLl9wb3B1cEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgfVxyXG5cclxuICAgIF9oYW5kbGVFc2NDbG9zZShldmVudCkge1xyXG4gICAgICAgIGlmIChldmVudC5rZXkgPT09ICdFc2NhcGUnKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgb3BlbiAoKSB7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlRXNjQ2xvc2UgPSB0aGlzLl9oYW5kbGVFc2NDbG9zZS5iaW5kKHRoaXMpO1xyXG4gICAgICAgIHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QuYWRkKCdwb3B1cF9vcGVuZWQnKTtcclxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gICAgfVxyXG5cclxuICAgIGNsb3NlICgpIHtcclxuICAgICAgICB0aGlzLl9wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgncG9wdXBfb3BlbmVkJyk7XHJcbiAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcclxuICAgIH1cclxuXHJcblxyXG4gICAgc2V0RXZlbnRMaXN0ZW5lcnMgKCkge1xyXG4gICAgICAgIHRoaXMuX3BvcHVwRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCAoZXZlbnQpID0+IHtcclxuICAgICAgICAgICAgaWYgKGV2ZW50LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3BvcHVwX19idXR0b24tZXhpdCcpIHx8IGV2ZW50LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3BvcHVwJykpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgIH1cclxufVxyXG5cclxuIiwiaW1wb3J0IHsgUG9wdXAgfSBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xyXG4gICAgY29uc3RydWN0b3IgKHBvcHVwU2VsZWN0b3IsIHtjYXJkSW1hZ2UsIGNhcmRIZWFkaW5nfSkge1xyXG4gICAgICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgICAgIHRoaXMuX2NhcmRJbWFnZSA9IGNhcmRJbWFnZTtcclxuICAgICAgICB0aGlzLl9jYXJkSGVhZGluZyA9IGNhcmRIZWFkaW5nO1xyXG4gICAgfVxyXG5cclxuICAgIG9wZW4gKG5hbWUsIGxpbmspIHtcclxuICAgICAgICBzdXBlci5vcGVuKCk7XHJcbiAgICAgICAgdGhpcy5fY2FyZEltYWdlLnNyYyA9IGxpbms7XHJcbiAgICAgICAgdGhpcy5fY2FyZEltYWdlLmFsdCA9IG5hbWU7XHJcbiAgICAgICAgdGhpcy5fY2FyZEhlYWRpbmcudGV4dENvbnRlbnQgPSBuYW1lO1xyXG4gICAgfVxyXG59XHJcbiIsImV4cG9ydCBjbGFzcyBVc2VySW5mbyB7XHJcbiAgICBjb25zdHJ1Y3RvciAoe3Byb2ZpbGVOYW1lLCBwcm9maWxlUHJvZmVzc2lvbiwgcHJvZmlsZUF2YXRhcn0pIHtcclxuICAgICAgICB0aGlzLl9uYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwcm9maWxlTmFtZSk7XHJcbiAgICAgICAgdGhpcy5fcHJvZmVzc2lvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocHJvZmlsZVByb2Zlc3Npb24pO1xyXG4gICAgICAgIHRoaXMuX2F2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocHJvZmlsZUF2YXRhcik7XHJcbiAgICB9XHJcblxyXG4gICAgLy/QodC+0LfQtNCw0ZHRgiDQvtCx0YrQtdC60YIsINCyINC60L7RgtC+0YDQvtC8INGB0L7RhdGA0LDQvdGP0LXRgiDQtNCw0L3QvdGL0LUg0YHQviDRgdGC0YDQsNC90LjRhtGLXHJcbiAgICBnZXRVc2VySW5mbyAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgbmFtZTogdGhpcy5fbmFtZS50ZXh0Q29udGVudCxcclxuICAgICAgICAgICAgYWJvdXQ6IHRoaXMuX3Byb2Zlc3Npb24udGV4dENvbnRlbnQsXHJcbiAgICAgICAgICAgIGF2YXRhcjogdGhpcy5fYXZhdGFyLnNyY1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvL9Cf0L7Qu9GD0YfQsNC10YIg0LTQsNC90L3Ri9C1INC4INC00L7QsdCw0LLQu9GP0LXRgiDQuNGFINC90LAg0YHRgtGA0LDQvdC40YbRg1xyXG4gICAgc2V0VXNlckluZm8gKGRhdGEpIHtcclxuICAgICAgICB0aGlzLl9uYW1lLnRleHRDb250ZW50ID0gZGF0YS5uYW1lO1xyXG4gICAgICAgIHRoaXMuX3Byb2Zlc3Npb24udGV4dENvbnRlbnQgPSBkYXRhLmFib3V0O1xyXG4gICAgICAgIHRoaXMuX2F2YXRhci5zcmMgPSBkYXRhLmF2YXRhclxyXG4gICAgfVxyXG59XHJcbiIsImltcG9ydCB7IFBvcHVwIH0gZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xyXG4gICAgY29uc3RydWN0b3IgKHBvcHVwU2VsZWN0b3IsIHsgaGFuZGxlRm9ybVN1Ym1pdCB9KSB7XHJcbiAgICAgICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcblxyXG4gICAgICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xyXG4gICAgICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fZm9ybScpO1xyXG4gICAgICAgIHRoaXMuX2lucHV0TGlzdCA9IEFycmF5LmZyb20odGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnBvcHVwX19pbnB1dCcpKTsgXHJcbiAgICAgICAgdGhpcy5fZm9ybUJ1dHRvbiA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fYnV0dG9uLXNhdmUnKTtcclxuICAgIH1cclxuXHJcbiAgICAvL9Ck0YPQvdC60YbQuNGPINCy0L7Qt9Cy0YDQsNGJ0LDQtdGCINC+0LHRitC10LrRgizQsiDQt9C90LDRh9C10L3QuNGPINC60LvRjtGH0LXQuSDQutC+0YLQvtGA0L7Qs9C+INCy0L3QtdGB0LXQvdGLINC00LDQvdC90YvQtSDQuNC3INC40L3Qv9GD0YLQvtCyXHJcbiAgICBfZ2V0SW5wdXRWYWx1ZXMgKCkge1xyXG4gICAgICAgIHRoaXMuX2Zvcm1WYWx1ZXMgPSB7fTtcclxuICAgICAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaChpbnB1dCA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuX2Zvcm1WYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIFxyXG4gICAgICAgIHJldHVybiB0aGlzLl9mb3JtVmFsdWVzO1xyXG4gICAgfVxyXG5cclxuICAgIC8v0KTRg9C90LrRhtC40Y8g0L/RgNC40L3QuNC80LDQtdGCINC+0LHRitC10LrRgiwg0LIg0LrQvtGC0L7RgNC+0Lwg0YXRgNCw0L3Rj9GC0YHRjyDQtNCw0L3QvdGL0LUg0YHQviDRgdGC0YDQsNC90LjRhtGLINC4INC30LDQv9C40YHRi9Cy0LDQtdGCINC40YUg0LLQvdGD0YLRgNGMINC/0L7Qu9C10Lkg0LjQvdC/0YPRgtC+0LJcclxuICAgIHNldElucHV0VmFsdWVzIChkYXRhKSB7XHJcbiAgICAgICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKGl0ZW0gPT4ge1xyXG4gICAgICAgICAgICBpdGVtLnZhbHVlID0gZGF0YVtpdGVtLm5hbWVdID8/ICcnO1xyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgcmVuZGVyTG9hZGluZyhpc0xvYWRpbmcpIHtcclxuICAgICAgICBpZiAoaXNMb2FkaW5nKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2Zvcm1CdXR0b24udGV4dENvbnRlbnQgPSAn0KHQvtGF0YDQsNC90LXQvdC40LUuLi4nXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgaWYodGhpcy5fZm9ybUVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCdwb3B1cF9fZm9ybS1hZGQtcGhvdG8nKSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fZm9ybUJ1dHRvbi50ZXh0Q29udGVudCA9IGDQodC+0LfQtNCw0YLRjGA7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9mb3JtQnV0dG9uLnRleHRDb250ZW50ID0gYNCh0L7RhdGA0LDQvdC40YLRjGA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICAgICAgdGhpcy5fZm9ybUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgfSlcclxuICAgICAgICBcclxuICAgICAgICB0aGlzLnJlbmRlckxvYWRpbmcodHJ1ZSk7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcclxuICAgIH1cclxuXHJcbiAgICBjbG9zZSgpIHtcclxuICAgICAgICBzdXBlci5jbG9zZSgpO1xyXG4gICAgICAgIHRoaXMuX2Zvcm1FbGVtZW50LnJlc2V0KCk7XHJcbiAgICB9XHJcbn0iLCJleHBvcnQgY2xhc3MgQXBpIHtcclxuICAgIGNvbnN0cnVjdG9yIChiYXNlVXJsLCBoZWFkZXJzKSB7XHJcbiAgICAgICAgdGhpcy5fYmFzZVVybCA9IGJhc2VVcmw7XHJcbiAgICAgICAgdGhpcy5faGVhZGVycyA9IGhlYWRlcnM7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0Q2FyZHMgKCkge1xyXG4gICAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcclxuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVyc1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xyXG4gICAgICAgICAgICBpZihyZXNwb25zZS5vaykge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGDQntGI0LjQsdC60LAgJHtyZXNwb25zZS5zdGF0dXN9YClcclxuICAgICAgICAgICAgfX0pXHJcbiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4gY29uc29sZS5sb2coYNCe0YjQuNCx0LrQsCAke2Vycm9yfWApKVxyXG4gICAgfVxyXG5cclxuICAgIGFkZENhcmQoY2FyZCl7XHJcbiAgICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCwge1xyXG4gICAgICAgICAgICBtZXRob2Q6ICdQT1NUJyxcclxuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgICAgICAgICAgbmFtZTogY2FyZC50aXRsZSxcclxuICAgICAgICAgICAgICAgIGxpbms6IGNhcmQubGlua1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xyXG4gICAgICAgICAgICBpZihyZXNwb25zZS5vaykge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGDQntGI0LjQsdC60LAgJHtyZXNwb25zZS5zdGF0dXN9YClcclxuICAgICAgICAgICAgfX0pXHJcbiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4gY29uc29sZS5sb2coYNCe0YjQuNCx0LrQsCAke2Vycm9yfWApKVxyXG4gICAgfVxyXG5cclxuICAgIGdldFVzZXJJbmZvKCkge1xyXG4gICAgICAgIHJldHVybiBmZXRjaCAoYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWVgLCB7XHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnNcclxuICAgICAgICB9KVxyXG4gICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4ge1xyXG4gICAgICAgICAgICBpZihyZXNwb25zZS5vaykge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGDQntGI0LjQsdC60LAgJHtyZXNwb25zZS5zdGF0dXN9YClcclxuICAgICAgICAgICAgfX0pXHJcbiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhg0J7RiNC40LHQutCwICR7ZXJyb3J9YClcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG5cclxuICAgIGVkaXRVc2VySW5mbyhkYXRhKSB7XHJcbiAgICAgICAgcmV0dXJuIGZldGNoIChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIHtcclxuICAgICAgICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICAgICAgICAgIG5hbWU6IGRhdGEubmFtZSxcclxuICAgICAgICAgICAgICAgIGFib3V0OiBkYXRhLmFib3V0XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSlcclxuICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7XHJcbiAgICAgICAgICAgIGlmKHJlc3BvbnNlLm9rKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpXHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYNCe0YjQuNCx0LrQsCAke3Jlc3BvbnNlLnN0YXR1c31gKVxyXG4gICAgICAgICAgICB9fSlcclxuICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiBjb25zb2xlLmxvZyhg0J7RiNC40LHQutCwICR7ZXJyb3J9YCkpXHJcbiAgICB9XHJcblxyXG4gICAgZGVsZXRlQ2FyZChjYXJkSWQpIHtcclxuICAgICAgICByZXR1cm4gZmV0Y2ggKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7Y2FyZElkfWAsIHtcclxuICAgICAgICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxyXG4gICAgICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xyXG4gICAgICAgICAgICBpZihyZXNwb25zZS5vaykge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGDQntGI0LjQsdC60LAgJHtyZXNwb25zZS5zdGF0dXN9YClcclxuICAgICAgICAgICAgfX0pXHJcbiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4gY29uc29sZS5sb2coYNCe0YjQuNCx0LrQsCAke2Vycm9yfWApKTtcclxuICAgIH1cclxuXHJcbiAgICBhZGRMaWtlIChjYXJkSWQpIHtcclxuICAgICAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtjYXJkSWR9L2xpa2VzYCwge1xyXG4gICAgICAgICAgICBtZXRob2Q6IFwiUFVUXCIsXHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnNcclxuICAgICAgICB9KVxyXG4gICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHtcclxuICAgICAgICAgICAgaWYocmVzcG9uc2Uub2spIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKClcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChg0J7RiNC40LHQutCwICR7cmVzcG9uc2Uuc3RhdHVzfWApXHJcbiAgICAgICAgICAgIH19KVxyXG4gICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coYNCe0YjQuNCx0LrQsCAke2Vycm9yfWApO1xyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgZGVsZXRlTGlrZSAoY2FyZElkKSB7XHJcbiAgICAgICAgcmV0dXJuIGZldGNoIChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2NhcmRJZH0vbGlrZXNgLCB7XHJcbiAgICAgICAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcclxuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVyc1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xyXG4gICAgICAgICAgICBpZihyZXNwb25zZS5vaykge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGDQntGI0LjQsdC60LAgJHtyZXNwb25zZS5zdGF0dXN9YClcclxuICAgICAgICAgICAgfX0pXHJcbiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhg0J7RiNC40LHQutCwICR7ZXJyb3J9YCk7XHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICBlZGl0QXZhdGFyIChkYXRhKSB7XHJcbiAgICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lL2F2YXRhcmAsIHtcclxuICAgICAgICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICAgICAgICAgIGF2YXRhcjogZGF0YS5hdmF0YXJcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9KVxyXG4gICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHtcclxuICAgICAgICAgICAgaWYocmVzcG9uc2Uub2spIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKClcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChg0J7RiNC40LHQutCwICR7cmVzcG9uc2Uuc3RhdHVzfWApXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coYNCe0YjQuNCx0LrQsCAke2Vycm9yfWApO1xyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgZ2V0SW5pdGlhbEluZm8oKSB7XHJcbiAgICAgICAgcmV0dXJuIFByb21pc2UuYWxsKFt0aGlzLmdldFVzZXJJbmZvKCksIHRoaXMuZ2V0Q2FyZHMoKV0pO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IHtQb3B1cH0gZnJvbSAnLi4vY29tcG9uZW50cy9Qb3B1cC5qcyc7XHJcblxyXG5leHBvcnQgY2xhc3MgUG9wdXBDb25maXJtIGV4dGVuZHMgUG9wdXAge1xyXG4gICAgY29uc3RydWN0b3IgKHBvcHVwU2VsZWN0b3IsIHtoYW5kbGVTdWJtaXR9KSB7XHJcbiAgICAgICAgc3VwZXIgKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgICAgIHRoaXMuX2hhbmRsZVN1Ym1pdCA9IGhhbmRsZVN1Ym1pdDtcclxuICAgICAgICB0aGlzLl9wb3B1cEZvcm0gPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19mb3JtJyk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIF9oYW5kbGVTdWJtaXRGb3JtID0gKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICB0aGlzLl9oYW5kbGVTdWJtaXQgKHRoaXMuX2NhcmRJZCwgdGhpcy5fY2FyZEVsKTtcclxuICAgIH1cclxuXHJcbiAgICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgICAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgICAgIHRoaXMuX3BvcHVwRm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCB0aGlzLl9oYW5kbGVTdWJtaXRGb3JtKTtcclxuICAgIH1cclxuXHJcbiAgICBvcGVuIChjYXJkSWQsIGNhcmRFbCkge1xyXG4gICAgICAgIHN1cGVyLm9wZW4oKTtcclxuICAgICAgICB0aGlzLl9jYXJkSWQgPSBjYXJkSWQ7XHJcbiAgICAgICAgdGhpcy5fY2FyZEVsID0gY2FyZEVsO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICBjbG9zZSAoKSB7XHJcbiAgICAgICAgc3VwZXIuY2xvc2UoKTtcclxuICAgICAgICB0aGlzLl9wb3B1cEZvcm0ucmVzZXQoKTtcclxuICAgIH1cclxufSIsImltcG9ydCB7Q2FyZH0gZnJvbSAnLi4vY29tcG9uZW50cy/QoWFyZC5qcyc7XHJcbmltcG9ydCB7ZWRpdEJ1dHRvbiwgcG9wdXBDb250YWluZXJXaXRoRm9ybSwgcHJvZmlsZU5hbWUsIHByb2ZpbGVBdmF0YXIsIHBvcHVwQXZhdGFyLCBwcm9maWxlRWRpdEF2YXRhciwgcHJvZmlsZVByb2Zlc3Npb24sIHBob3RvQnV0dG9uLCBwaG90b1BvcHVwQ29udGFpbmVyLCBpbnB1dFBpY3RpcmVUaXRsZSwgaW5wdXRMaW5rLCBlbGVtZW50cywgcG9wdXBDYXJkSW1hZ2VGdWxsLCBwb3B1cEltYWdlSGVhZGluZywgaW5pdGlhbENhcmRzfSBmcm9tICcuLi91dGlscy9jb25zdGFudHMuanMnO1xyXG5pbXBvcnQge0Zvcm1WYWxpZGF0b3J9IGZyb20gJy4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyc7XHJcbmltcG9ydCB7U2VjdGlvbn0gZnJvbSAnLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzJztcclxuaW1wb3J0IHtQb3B1cH0gZnJvbSAnLi4vY29tcG9uZW50cy9Qb3B1cC5qcyc7XHJcbmltcG9ydCB7UG9wdXBXaXRoSW1hZ2UgfSBmcm9tICcuLi9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzJztcclxuaW1wb3J0IHsgVXNlckluZm8gfSBmcm9tICcuLi9jb21wb25lbnRzL1VzZXJJbmZvLmpzJztcclxuaW1wb3J0IHsgUG9wdXBXaXRoRm9ybSB9IGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyc7XHJcbmltcG9ydCB7IEFwaSB9IGZyb20gJy4uL2NvbXBvbmVudHMvQXBpLmpzJztcclxuaW1wb3J0IHsgUG9wdXBDb25maXJtIH0gZnJvbSAnLi4vY29tcG9uZW50cy9Qb3B1cENvbmZpcm0uanMnXHJcblxyXG4vL9CY0LzQv9C+0YDRgiDQutCw0YDRgtC40L3QvtC6XHJcbmltcG9ydCBKYWNrSW1hZ2UgZnJvbSAnLi4vaW1hZ2Uv0JbQsNC6LmpwZyc7XHJcbmltcG9ydCBhZGRCdXR0b25JbWFnZSBmcm9tICcuLi9pbWFnZS/QmtC90L7Qv9C60LDQlNC+0LHQsNCy0LjRgtGMLnBuZyc7XHJcbmltcG9ydCBhZGRCdXR0b25JbWFnZVN2ZyBmcm9tICcuLi9pbWFnZS9hZGQtYnV0dG9uLnN2Zyc7XHJcbmltcG9ydCBlZGl0QnV0dG9uSW1hZ2UgZnJvbSAnLi4vaW1hZ2UvZWRpdC5zdmcnO1xyXG5pbXBvcnQgYnV0dG9uTGlrZUFjdGl2ZUltYWdlIGZyb20gJy4uL2ltYWdlL2xpa2UtYWN0aXZlLnN2Zyc7XHJcbmltcG9ydCBidXR0b25MaWtlSW1hZ2UgZnJvbSAnLi4vaW1hZ2UvbGlrZS5zdmcnO1xyXG5pbXBvcnQgYnV0dG9uVHJhc2hJbWFnZSBmcm9tICcuLi9pbWFnZS90cmFzaC5zdmcnO1xyXG5pbXBvcnQgYnV0dG9uVmVjdG9ySW1hZ2UgZnJvbSAnLi4vaW1hZ2UvVmVjdG9yLnN2Zyc7XHJcbmltcG9ydCBlZGl0UGVuY2lsIGZyb20gJy4uL2ltYWdlL2VkaXRQZW5jaWwuc3ZnJ1xyXG5cclxuY29uc3QgaW1hZ2VzID0ge1xyXG4gICAgbmFtZTogJ0phY2snLCBpbWFnZTogSmFja0ltYWdlLFxyXG4gICAgbmFtZTogJ9Ca0L3QvtC/0LrQsNCU0L7QsdCw0LLQuNGC0YwnLCBpbWFnZTogYWRkQnV0dG9uSW1hZ2UsXHJcbiAgICBuYW1lOiAn0JTQvtCx0LDQstC40YLRjFN2ZycsIGltYWdlOiBhZGRCdXR0b25JbWFnZVN2ZyxcclxuICAgIG5hbWU6ICfQl9Cw0LrRgNGL0YLRjFN2ZycsIGltYWdlOiBlZGl0QnV0dG9uSW1hZ2UsXHJcbiAgICBuYW1lOiAn0JvQsNC50LrQkNC60YLQuNCy0L3Ri9C5JywgaW1hZ2U6IGJ1dHRvbkxpa2VBY3RpdmVJbWFnZSxcclxuICAgIG5hbWU6ICfQm9Cw0LnQuicsIGltYWdlOiBidXR0b25MaWtlSW1hZ2UsXHJcbiAgICBuYW1lOiAn0KPQtNCw0LvQuNGC0YwnLCBpbWFnZTogYnV0dG9uVHJhc2hJbWFnZSxcclxuICAgIG5hbWU6ICfQktC10LrRgtC+0YAnLCBpbWFnZTogYnV0dG9uVmVjdG9ySW1hZ2UsXHJcbiAgICBuYW1lOiAn0JrQsNGA0LDQvdC00LDRiCcsIGltYWdlOiBlZGl0UGVuY2lsXHJcbn1cclxuXHJcblxyXG4vL9CY0LzQv9C+0YDRgtC40YDRg9C10LwgY3NzXHJcbmltcG9ydCAnLi9pbmRleC5jc3MnO1xyXG5cclxuLy/QntCx0YrQtdC60YIg0LTQu9GPIEZvcm1WYWxpZGF0b3JcclxuY29uc3QgdmFsaWRhdGlvbkNvbmZpZyA9IHtcclxuICAgIGZvcm1TZWxlY3RvcjogJy5wb3B1cF9fZm9ybScsXHJcbiAgICBpbnB1dFNlbGVjdG9yOiAnLnBvcHVwX19pbnB1dCcsXHJcbiAgICBzdWJtaXRCdXR0b25TZWxlY3RvcjogJy5wb3B1cF9fYnV0dG9uLXNhdmUnLFxyXG4gICAgaW5hY3RpdmVCdXR0b25DbGFzczogJ3BvcHVwX19idXR0b24tc2F2ZV9pbmFjdGl2ZScsXHJcbiAgICBpbnB1dEVycm9yQ2xhc3M6ICdwb3B1cF9faW5wdXRfdHlwZV9lcnJvcicsXHJcbiAgICBlcnJvckNsYXNzOiAncG9wdXBfX2lucHV0LWVycm9yX2FjdGl2ZSdcclxufSBcclxuXHJcbi8v0J/QtdGA0LXQvNC10L3QvdCw0Y8g0YEgQVBJXHJcbmNvbnN0IGFwaSA9IG5ldyBBcGkoJ2h0dHBzOi8vbm9tb3JlcGFydGllcy5jby92MS9jb2hvcnQtNjUnLCB7YXV0aG9yaXphdGlvbjogJ2IxNWJjMDJlLWFlMDYtNDZhMy1iNDkwLWIxY2U3YmE4NTMyMCcsIFwiY29udGVudC10eXBlXCI6ICdhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PVVURi04J30pO1xyXG5cclxuLy/QmtC70LDRgdGBLCDQvtGC0LLQtdGH0LDRjtGJ0LjQuSDQt9CwINC40L3RhNC+0YDQvNCw0YbQuNGOINC+INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvQtVxyXG5jb25zdCB1c2VySW5mbyA9IG5ldyBVc2VySW5mbyAoe3Byb2ZpbGVOYW1lOiBwcm9maWxlTmFtZSwgcHJvZmlsZVByb2Zlc3Npb246IHByb2ZpbGVQcm9mZXNzaW9uLCBwcm9maWxlQXZhdGFyOiBwcm9maWxlQXZhdGFyfSk7XHJcblxyXG4vL9Ca0LvQsNGB0YEsINC+0YLQstC10YfQsNGO0YnQuNC5INC30LAg0YDQtdC00LDQutGC0LjRgNC+0LLQsNC90LjQtSDQv9C+0LvQtdC5INGE0L7RgNC80YtcclxuY29uc3QgcG9wdXBXaXRoRm9ybUVkaXQgPSBuZXcgUG9wdXBXaXRoRm9ybSAoJyNwb3B1cC1wcm9maWxlJywgeyBoYW5kbGVGb3JtU3VibWl0OiAoZm9ybURhdGEpID0+IHtcclxuICAgIGFwaS5lZGl0VXNlckluZm8oZm9ybURhdGEpLnRoZW4oZGF0YSA9PiB7XHJcbiAgICAgICAgdXNlckluZm8uc2V0VXNlckluZm8oZGF0YSk7XHJcbiAgICB9KS5jYXRjaChlcnJvciA9PiBjb25zb2xlLmxvZyhg0J7RiNC40LHQutCwICR7ZXJyb3J9YCkpXHJcbiAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgICAgcG9wdXBXaXRoRm9ybUVkaXQucmVuZGVyTG9hZGluZyhmYWxzZSk7XHJcbiAgICB9KVxyXG59fSk7XHJcblxyXG5jb25zdCBwb3B1cFdpdGhGb3JtUGhvdG8gPSBuZXcgUG9wdXBXaXRoRm9ybSAoJyNwb3B1cC1hZGQtcGhvdG8nLCB7IGhhbmRsZUZvcm1TdWJtaXQ6IChmb3JtRGF0YSkgPT4ge1xyXG4gICAgYXBpLmFkZENhcmQoZm9ybURhdGEpLnRoZW4oY2FyZCA9PiB7XHJcbiAgICAgICAgY3JlYXRlQ2FyZChjYXJkLCAnLnRlbXBsYXRlLWFkZC1jYXJkcycsIGhhbmRsZUNhcmRDbGljaywgdXNlcklkKTsgIFxyXG4gICAgfSkuY2F0Y2goZXJyb3IgPT4gY29uc29sZS5sb2coYNCe0YjQuNCx0LrQsCAke2Vycm9yfWApKVxyXG4gICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICAgIHBvcHVwV2l0aEZvcm1QaG90by5yZW5kZXJMb2FkaW5nKGZhbHNlKTtcclxuICAgIH0pXHJcbn19KTtcclxuXHJcbmNvbnN0IHBvcHVwV2l0aEZvcm1BdmF0YXIgPSBuZXcgUG9wdXBXaXRoRm9ybSAoJyNwb3B1cC1hdmF0YXInLCB7aGFuZGxlRm9ybVN1Ym1pdDogKGZvcm1EYXRhKSA9PiB7XHJcbiAgICBhcGkuZWRpdEF2YXRhcihmb3JtRGF0YSkudGhlbihkYXRhID0+IHtcclxuICAgICAgICB1c2VySW5mby5zZXRVc2VySW5mbyhkYXRhKTtcclxuICAgIH0pLmNhdGNoKGVycm9yID0+IGNvbnNvbGUubG9nKGDQntGI0LjQsdC60LAgJHtlcnJvcn1gKSlcclxuICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgICBwb3B1cFdpdGhGb3JtQXZhdGFyLnJlbmRlckxvYWRpbmcoZmFsc2UpO1xyXG4gICAgfSlcclxufX0pXHJcblxyXG4vL9CX0LDQv9GD0YHQutCw0LXQvCDQvtC00L3QvtCy0YDQtdC80LXQvdC90L4g0LzQtdGC0L7QtCDQv9C+0LvRg9GH0LXQvdC40Y8g0LrQsNGA0YLQvtGH0LrQuCDQuCDQvNC10YLQvtC0INC/0L7Qu9GD0YfQtdC90LjRjyDQuNC90YTQvtGA0LzQsNGG0LjQuCDQviDQv9C+0LvRjNC30L7QstCw0YLQtdC70LUsINC00L7RgdGC0LDRkdC8IGlkINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRj1xyXG5sZXQgdXNlcklkO1xyXG5cclxuYXBpLmdldEluaXRpYWxJbmZvKCkudGhlbihkYXRhID0+IHtcclxuICAgIGNvbnN0IGluZm9Vc2VyID0gZGF0YVswXTtcclxuICAgIGNvbnN0IGNhcmRzID0gZGF0YVsxXTtcclxuICAgIHVzZXJJZCA9IGluZm9Vc2VyLl9pZDtcclxuICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKGluZm9Vc2VyKTtcclxuICAgIGNhcmRMaXN0LnJlbmRlckl0ZW1zKGNhcmRzKTtcclxufSkuY2F0Y2goKGVycm9yKSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZyhg0J7RiNC40LHQutCwICR7ZXJyb3J9YCk7XHJcbn0pXHJcblxyXG4vL9Cj0LTQsNC70LXQvdC40LUg0LrQsNGA0YLQvtGH0LrQuFxyXG5jb25zdCBwb3B1cENvbmZpcm0gPSBuZXcgUG9wdXBDb25maXJtKCcjcG9wdXAtY29uZmlybScsIHtoYW5kbGVTdWJtaXQ6IChjYXJkSWQsIGNhcmRFbGVtZW50KSA9PiB7XHJcbiAgICBhcGkuZGVsZXRlQ2FyZChjYXJkSWQpLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgIGNhcmRFbGVtZW50LnJlbW92ZSgpO1xyXG4gICAgICAgIHBvcHVwQ29uZmlybS5jbG9zZSgpO1xyXG4gICAgfSkuY2F0Y2goKGVycm9yKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coYNCe0YjQuNCx0LrQsCAke2Vycm9yfWApO1xyXG4gICAgfSlcclxufX0pXHJcbnBvcHVwQ29uZmlybS5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuLy/QmtC70LDRgdGBLCDQvtGC0LLQtdGH0LDRjtGJ0LjQuSDQt9CwINC+0YLQutGA0YvRgtC40LUg0LrQsNGA0YLQuNC90LrQuCDQutCw0YDRgtC+0YfQutC4XHJcbmNvbnN0IHBvcHVwV2l0aEltYWdlID0gbmV3IFBvcHVwV2l0aEltYWdlICgnI3BvcHVwLWltYWdlcycsIHtjYXJkSW1hZ2U6IHBvcHVwQ2FyZEltYWdlRnVsbCwgY2FyZEhlYWRpbmc6IHBvcHVwSW1hZ2VIZWFkaW5nfSk7XHJcbnBvcHVwV2l0aEltYWdlLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG4vL9Ck0YPQvdC60YbQuNGPLCDQutC+0YLQvtGA0LDRjyDQv9C10YDQtdC00LDRkdGCINC00LDQvdC90YvQtSDQsiDRgdC+0LfQtNCw0L3QvdGD0Y4g0LrQsNGA0YLQvtGH0LrRg1xyXG5jb25zdCBoYW5kbGVDYXJkQ2xpY2sgPSAobmFtZSwgbGluaykgPT4geyAgXHJcbiAgICBwb3B1cFdpdGhJbWFnZS5vcGVuKG5hbWUsIGxpbmspOyBcclxufVxyXG5cclxuY29uc3QgY2FyZExpc3QgPSBuZXcgU2VjdGlvbiAoeyByZW5kZXJlcjogKGl0ZW0pID0+IHtcclxuICAgIGNyZWF0ZUNhcmQoaXRlbSwgJy50ZW1wbGF0ZS1hZGQtY2FyZHMnLCBoYW5kbGVDYXJkQ2xpY2ssIHVzZXJJZCk7XHJcbn19LCBlbGVtZW50cyk7XHJcblxyXG4vL9Ck0YPQvdC60YbQuNGPINC30LDQutGA0YvRgtC40Y8g0L/QvtC/0LDQvyDQvdCwINC60L3QvtC/0LrRgyBcItCh0L7RhdGA0LDQvdC40YLRjFwiXHJcbmZ1bmN0aW9uIGhhbmRsZUZvcm1TdWJtaXRFZGl0ICgpIHtcclxuICAgIHBvcHVwV2l0aEZvcm1FZGl0LnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICBwb3B1cFdpdGhGb3JtRWRpdC5jbG9zZSgpO1xyXG59XHJcblxyXG5cclxuLy/QpNGD0L3QutGG0LjRjyDQtNC+0LHQsNCy0LvQtdC90LjRjyDQvdC+0LLQvtC5INC60LDRgNGC0L7Rh9C60Lgg0L3QsCDQutC90L7Qv9C60YMgXCLQodC+0LfQtNCw0YLRjFwiXHJcbmZ1bmN0aW9uIGhhbmRsZUZvcm1TdWJtaXRBZGRQaG90byAoKSB7XHJcbiAgICBwb3B1cFdpdGhGb3JtUGhvdG8uc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIHBvcHVwV2l0aEZvcm1QaG90by5jbG9zZSgpO1xyXG59XHJcblxyXG4vL9Ck0YPQvdC60YbQuNGPINC00L7QsdCw0LLQu9C10L3QuNGPINCw0LLQsNGC0LDRgNCwXHJcbmZ1bmN0aW9uIGhhbmRsZUZvcm1TdWJtaXRBdmF0YXIgKCkge1xyXG4gICAgcG9wdXBXaXRoRm9ybUF2YXRhci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgcG9wdXBXaXRoRm9ybUF2YXRhci5jbG9zZSgpO1xyXG59XHJcblxyXG4vL9Ck0YPQvdC60YbQuNGPINGB0L7Qt9C00LDQvdC40Y8g0LrQsNGA0YLQvtGH0LrQuFxyXG5mdW5jdGlvbiBjcmVhdGVDYXJkIChkYXRhLCB0ZW1wbGF0ZVNlbGVjdG9yLCBoYW5kbGVDYXJkQ2xpY2ssIGNhcmRJZCkge1xyXG4gICAgY29uc3QgY2FyZCA9IG5ldyBDYXJkKGRhdGEsIHRlbXBsYXRlU2VsZWN0b3IsIGhhbmRsZUNhcmRDbGljaywgY2FyZElkLCB7aGFuZGxlRGVsZXRlQ2FyZDogKGNhcmRJZCwgY2FyZEVsKSA9PiB7XHJcbiAgICAgICAgcG9wdXBDb25maXJtLm9wZW4oY2FyZElkLCBjYXJkRWwpO1xyXG4gICAgfSwgYWRkTGlrZTogKCkgPT4ge1xyXG4gICAgICAgIGFwaS5hZGRMaWtlKGRhdGEuX2lkKVxyXG4gICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHtcclxuICAgICAgICAgICAgY2FyZC5saWtlKCk7XHJcbiAgICAgICAgICAgIGNhcmQubGlrZXNDb3VudChyZXNwb25zZSk7XHJcbiAgICAgICAgfSkuY2F0Y2goKGVycm9yKSA9PiBjb25zb2xlLmxvZyhg0J7RiNC40LHQutCwICR7ZXJyb3J9YCkpXHJcbiAgICB9LCBkZWxldGVMaWtlOiAoKSA9PiB7XHJcbiAgICAgICAgYXBpLmRlbGV0ZUxpa2UoZGF0YS5faWQpXHJcbiAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xyXG4gICAgICAgICAgY2FyZC5kaXNsaWtlKCk7XHJcbiAgICAgICAgICBjYXJkLmxpa2VzQ291bnQocmVzcG9uc2UpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4gY29uc29sZS5sb2coYNCe0YjQuNCx0LrQsCAke2Vycm9yfWApKVxyXG4gICAgfX0pO1xyXG4gICAgY29uc3QgY2FyZEVsZW1lbnQgPSBjYXJkLmdlbmVyYXRlQ2FyZCgpO1xyXG4gICAgY2FyZExpc3QuYWRkSXRlbShjYXJkRWxlbWVudCk7XHJcbn1cclxuXHJcbi8v0KTRg9C90LrRhtC40Y8g0L7RgtC60YDRi9GC0LjRjyDQv9C+0L/QsNC/0LBcclxuZnVuY3Rpb24gb3BlblBvcHVwIChwb3B1cEVsZW1lbnQpIHtcclxuICAgIGNvbnN0IHBvcHVwID0gbmV3IFBvcHVwIChwb3B1cEVsZW1lbnQpO1xyXG4gICAgcG9wdXAub3BlbigpO1xyXG4gICAgcG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxufVxyXG5cclxuZnVuY3Rpb24gYWRkQnV0dG9uQ2xpY2tIYW5kbGVyICgpIHsgXHJcbiAgICBpbnB1dFBpY3RpcmVUaXRsZS52YWx1ZSA9ICcnO1xyXG4gICAgaW5wdXRMaW5rLnZhbHVlID0gJyc7XHJcbiAgICBmb3JtVmFsaWRhdGlvbkFkZFBob3RvLmRpc2FibGVTdWJtaXRCdXR0b24oKTtcclxuICAgIG9wZW5Qb3B1cCgnI3BvcHVwLWFkZC1waG90bycpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBlZGl0QnV0dG9uQ2xpY2tIYW5kbGVyICgpIHsgIFxyXG4gICAgcG9wdXBXaXRoRm9ybUVkaXQuc2V0SW5wdXRWYWx1ZXModXNlckluZm8uZ2V0VXNlckluZm8oKSk7XHJcbiAgICBmb3JtVmFsaWRhdGlvbkVkaXQuZGlzYWJsZVN1Ym1pdEJ1dHRvbigpO1xyXG4gICAgb3BlblBvcHVwKCcjcG9wdXAtcHJvZmlsZScpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBhdmF0YXJCdXR0b25DbGlja0hhbmRsZXIgKCkge1xyXG4gICAgb3BlblBvcHVwKCcjcG9wdXAtYXZhdGFyJyk7XHJcbiAgICBmb3JtVmFsaWRhdGlvbkF2YXRhci5kaXNhYmxlU3VibWl0QnV0dG9uKCk7XHJcbn1cclxuXHJcbi8v0JLRi9C30L7QstGLINGE0YPQvdC60YbQuNC5XHJcbmVkaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBlZGl0QnV0dG9uQ2xpY2tIYW5kbGVyKTtcclxucGhvdG9CdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBhZGRCdXR0b25DbGlja0hhbmRsZXIpO1xyXG5wb3B1cENvbnRhaW5lcldpdGhGb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIGhhbmRsZUZvcm1TdWJtaXRFZGl0KTtcclxucGhvdG9Qb3B1cENvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCBoYW5kbGVGb3JtU3VibWl0QWRkUGhvdG8pO1xyXG5wcm9maWxlRWRpdEF2YXRhci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGF2YXRhckJ1dHRvbkNsaWNrSGFuZGxlcik7XHJcbnBvcHVwQXZhdGFyLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIGhhbmRsZUZvcm1TdWJtaXRBdmF0YXIpO1xyXG5cclxuXHJcbmNvbnN0IGZvcm1WYWxpZGF0aW9uRWRpdCA9IG5ldyBGb3JtVmFsaWRhdG9yKHZhbGlkYXRpb25Db25maWcsICcjcG9wdXBfX2Zvcm0tcHJvZmlsZScpO1xyXG5mb3JtVmFsaWRhdGlvbkVkaXQuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5jb25zdCBmb3JtVmFsaWRhdGlvbkFkZFBob3RvID0gbmV3IEZvcm1WYWxpZGF0b3IodmFsaWRhdGlvbkNvbmZpZywgJyNwb3B1cF9fZm9ybS1hZGQtcGhvdG8nKTtcclxuZm9ybVZhbGlkYXRpb25BZGRQaG90by5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbmNvbnN0IGZvcm1WYWxpZGF0aW9uQXZhdGFyID0gbmV3IEZvcm1WYWxpZGF0b3IodmFsaWRhdGlvbkNvbmZpZywgJyNwb3B1cC1hdmF0YXItZm9ybScpO1xyXG5mb3JtVmFsaWRhdGlvbkF2YXRhci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcblxyXG4iXSwibmFtZXMiOlsiX193ZWJwYWNrX3JlcXVpcmVfXyIsInAiLCJDYXJkIiwiZGF0YSIsInRlbXBsYXRlU2VsZWN0b3IiLCJoYW5kbGVDYXJkQ2xpY2siLCJjYXJkSWQiLCJfcmVmIiwiaGFuZGxlRGVsZXRlQ2FyZCIsImFkZExpa2UiLCJkZWxldGVMaWtlIiwiX2NsYXNzQ2FsbENoZWNrIiwidGhpcyIsIl9uYW1lIiwibmFtZSIsIl9saW5rIiwibGluayIsIl90ZW1wbGF0ZVNlbGVjdG9yIiwiX2ltYWdlIiwiX2hhbmRsZUNhcmRDbGljayIsIl9oYW5kbGVEZWxldGVDYXJkIiwiX3VzZXJJZCIsIl9vd25lcklkIiwib3duZXIiLCJfaWQiLCJfY2FyZElkIiwiX2xpa2VzIiwibGlrZXMiLCJfYWRkTGlrZSIsIl9kZWxldGVMaWtlIiwia2V5IiwidmFsdWUiLCJfbGlrZUJ1dHRvbiIsImNsYXNzTGlzdCIsImFkZCIsInJlbW92ZSIsIl90aGlzIiwiZm9yRWFjaCIsImVsZW1lbnQiLCJyZXMiLCJfbGlrZXNDb3VudCIsInRleHRDb250ZW50IiwibGVuZ3RoIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY29udGVudCIsImNsb25lTm9kZSIsIl9lbGVtZW50IiwiX2dldFRlbXBsYXRlIiwic3JjIiwiYWx0IiwiX2RlbGV0ZUJ1dHRvblRyYXNoIiwiX3VzZXJMaWtlIiwiX3NldEV2ZW50TGlzdGVuZXJzIiwiX3RoaXMyIiwiYWRkRXZlbnRMaXN0ZW5lciIsImNvbnRhaW5zIiwidG9nZ2xlIiwiZWRpdEJ1dHRvbiIsInBob3RvUG9wdXAiLCJwcm9maWxlRWRpdEF2YXRhciIsInBvcHVwQ29udGFpbmVyV2l0aEZvcm0iLCJwaG90b0J1dHRvbiIsInBob3RvUG9wdXBDb250YWluZXIiLCJpbnB1dFBpY3RpcmVUaXRsZSIsImlucHV0TGluayIsInBvcHVwSW1hZ2VzIiwicG9wdXBDYXJkSW1hZ2VGdWxsIiwicG9wdXBJbWFnZUhlYWRpbmciLCJwb3B1cEF2YXRhciIsIkZvcm1WYWxpZGF0b3IiLCJjb25maWciLCJmb3JtIiwiX2Zvcm0iLCJfZm9ybUVsZW1lbnQiLCJfZm9ybVNlbGVjdG9yIiwiZm9ybVNlbGVjdG9yIiwiX2lucHV0IiwiaW5wdXRTZWxlY3RvciIsIl9zdWJtaXQiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsIl9pbmFjdGl2ZUJ1dHRvbiIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJfaW5wdXRFcnJvciIsImlucHV0RXJyb3JDbGFzcyIsIl9lcnJvciIsImVycm9yQ2xhc3MiLCJfYnV0dG9uRWxlbWVudCIsIl9pbnB1dExpc3QiLCJBcnJheSIsImZyb20iLCJxdWVyeVNlbGVjdG9yQWxsIiwiaW5wdXRFbGVtZW50IiwiZXJyb3JNZXNzYWdlIiwiaW5wdXRGb3JtRXJyb3IiLCJjb25jYXQiLCJpZCIsInNvbWUiLCJ2YWxpZGl0eSIsInZhbGlkIiwiX2hhc0ludmFsaWRJbnB1dCIsInNldEF0dHJpYnV0ZSIsInJlbW92ZUF0dHJpYnV0ZSIsIl9oaWRlSW5wdXRFcnJvciIsIl9zaG93SW5wdXRFcnJvciIsInZhbGlkYXRpb25NZXNzYWdlIiwiX3RvZ2dsZUJ1dHRvblN0YXRlIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJfc2V0RXZlbnRMaXN0ZW5lciIsIlNlY3Rpb24iLCJjb250YWluZXJTZWxlY3RvciIsInJlbmRlcmVyIiwiX2NvbnRhaW5lciIsIl9yZW5kZXJlciIsInByZXBlbmQiLCJjYXJkcyIsIml0ZW0iLCJQb3B1cCIsInBvcHVwU2VsZWN0b3IiLCJfcG9wdXBFbGVtZW50IiwiY2xvc2UiLCJfaGFuZGxlRXNjQ2xvc2UiLCJiaW5kIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInRhcmdldCIsIlBvcHVwV2l0aEltYWdlIiwiX1BvcHVwIiwiX2luaGVyaXRzIiwiX3N1cGVyIiwiY2FyZEltYWdlIiwiY2FyZEhlYWRpbmciLCJjYWxsIiwiX2NhcmRJbWFnZSIsIl9jYXJkSGVhZGluZyIsIl9nZXQiLCJfZ2V0UHJvdG90eXBlT2YiLCJwcm90b3R5cGUiLCJVc2VySW5mbyIsInByb2ZpbGVOYW1lIiwicHJvZmlsZVByb2Zlc3Npb24iLCJwcm9maWxlQXZhdGFyIiwiX3Byb2Zlc3Npb24iLCJfYXZhdGFyIiwiYWJvdXQiLCJhdmF0YXIiLCJQb3B1cFdpdGhGb3JtIiwiaGFuZGxlRm9ybVN1Ym1pdCIsIl9oYW5kbGVGb3JtU3VibWl0IiwiX2Zvcm1CdXR0b24iLCJfZm9ybVZhbHVlcyIsImlucHV0IiwiX2RhdGEkaXRlbSRuYW1lIiwiaXNMb2FkaW5nIiwicmVuZGVyTG9hZGluZyIsIl9nZXRJbnB1dFZhbHVlcyIsInJlc2V0IiwiQXBpIiwiYmFzZVVybCIsImhlYWRlcnMiLCJfYmFzZVVybCIsIl9oZWFkZXJzIiwiZmV0Y2giLCJ0aGVuIiwicmVzcG9uc2UiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzIiwiY2F0Y2giLCJlcnJvciIsImNvbnNvbGUiLCJsb2ciLCJjYXJkIiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ0aXRsZSIsImFsbCIsImdldFVzZXJJbmZvIiwiZ2V0Q2FyZHMiLCJQb3B1cENvbmZpcm0iLCJoYW5kbGVTdWJtaXQiLCJfYXNzZXJ0VGhpc0luaXRpYWxpemVkIiwiX2hhbmRsZVN1Ym1pdCIsIl9jYXJkRWwiLCJfcG9wdXBGb3JtIiwiX2hhbmRsZVN1Ym1pdEZvcm0iLCJjYXJkRWwiLCJfZGVmaW5lUHJvcGVydHkiLCJfaW1hZ2VzIiwiaW1hZ2UiLCJKYWNrSW1hZ2UiLCJhZGRCdXR0b25JbWFnZSIsImFkZEJ1dHRvbkltYWdlU3ZnIiwiZWRpdEJ1dHRvbkltYWdlIiwiYnV0dG9uTGlrZUFjdGl2ZUltYWdlIiwiYnV0dG9uTGlrZUltYWdlIiwiYnV0dG9uVHJhc2hJbWFnZSIsImJ1dHRvblZlY3RvckltYWdlIiwiZWRpdFBlbmNpbCIsInVzZXJJZCIsInZhbGlkYXRpb25Db25maWciLCJhcGkiLCJhdXRob3JpemF0aW9uIiwidXNlckluZm8iLCJwb3B1cFdpdGhGb3JtRWRpdCIsImZvcm1EYXRhIiwiZWRpdFVzZXJJbmZvIiwic2V0VXNlckluZm8iLCJmaW5hbGx5IiwicG9wdXBXaXRoRm9ybVBob3RvIiwiYWRkQ2FyZCIsImNyZWF0ZUNhcmQiLCJwb3B1cFdpdGhGb3JtQXZhdGFyIiwiZWRpdEF2YXRhciIsImdldEluaXRpYWxJbmZvIiwiaW5mb1VzZXIiLCJjYXJkTGlzdCIsInJlbmRlckl0ZW1zIiwicG9wdXBDb25maXJtIiwiY2FyZEVsZW1lbnQiLCJkZWxldGVDYXJkIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJwb3B1cFdpdGhJbWFnZSIsIm9wZW4iLCJsaWtlIiwibGlrZXNDb3VudCIsImRpc2xpa2UiLCJnZW5lcmF0ZUNhcmQiLCJhZGRJdGVtIiwib3BlblBvcHVwIiwicG9wdXBFbGVtZW50IiwicG9wdXAiLCJzZXRJbnB1dFZhbHVlcyIsImZvcm1WYWxpZGF0aW9uRWRpdCIsImRpc2FibGVTdWJtaXRCdXR0b24iLCJmb3JtVmFsaWRhdGlvbkFkZFBob3RvIiwiZm9ybVZhbGlkYXRpb25BdmF0YXIiLCJlbmFibGVWYWxpZGF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==